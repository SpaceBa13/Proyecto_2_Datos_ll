[gd_scene load_steps=7 format=3 uid="uid://q7cvmif46wjl"]

[ext_resource type="Texture2D" uid="uid://bjvu2cv7c5bie" path="res://Resources/Enemies/Spectral_Eye_Right.png" id="2_hagas"]
[ext_resource type="Script" path="res://Scripts/Enemy/Astar.gd" id="3_cwgsw"]
[ext_resource type="Script" path="res://Scripts/Enemy/Backtraking_path.gd" id="4_g6oup"]

[sub_resource type="GDScript" id="GDScript_pup0s"]
script/source = "extends CharacterBody2D

class_name Blue_Spectre

@onready var tile_map = $\"../../DungeonRoom\"
@onready var player = $\"../../Player\"
var current_id_path: Array
const speed = 1.5
var spawn_position = Vector2i(0,0)
var chasing: bool
@onready var Astar_path = $Astar
@onready var Backtrack_path = $Backtraking_path
var teleport = false
@export var maxHealth = 2
@onready var currentHealth: int = maxHealth

func _ready():
	spawn_position = tile_map.local_to_map(global_position)
	chasing = false
	Astar_path.tile_map = tile_map
	Backtrack_path.tile_map = tile_map

func make_astar_path():
	var own_position = tile_map.local_to_map(global_position)
	var player_position = tile_map.local_to_map(player.global_position)
	var heuristic = Astar_path.heuristic(own_position, player_position)
	var id_path = []
	if heuristic < 40:
		id_path = Astar_path.get_id_path(own_position, player_position, tile_map).slice(1)
		if teleport == false:
			var valid_teleport = Astar_path.get_neighbors(tile_map.local_to_map(global_position))
			for dir in [Vector2i(2, 0), Vector2i(-2, 0), Vector2i(0, 2), Vector2i(0, -2)]:
				var neighbor = player_position + dir
				if Astar_path.is_valid_neighbor(neighbor):
					var target_position = Vector2(player.global_position.x + dir.x * 16, player.global_position.y + dir.y * 16)
					global_position = target_position
					break
			teleport = true
	
	if id_path.is_empty() == false:
		current_id_path = id_path

		

func _physics_process(delta):
	var own_position = tile_map.local_to_map(global_position)
	var player_position = tile_map.local_to_map(player.global_position)
	var heuristic = Astar_path.heuristic(own_position, player_position)
	var tile_data = tile_map.get_cell_tile_data(0, tile_map.local_to_map(player.global_position))
	if current_id_path.is_empty():
		if tile_data != null:
			if tile_data.get_custom_data(\"safe_zone\") != true and player.seen == true:
				make_astar_path()
				return
			
	var target_position: Vector2
	if !current_id_path.is_empty():
		target_position = tile_map.map_to_local(current_id_path.front())
	else:
		return
	#Si la informacion de la celda es diferente de null
	if tile_data != null:
		#Obtiene si el jugador esta o no en zona segura
		if tile_data.get_custom_data(\"safe_zone\") != true and player.seen == true:
			chasing = true
			make_astar_path()
			if heuristic > 1:
				global_position = global_position.move_toward(target_position, speed)
				if global_position.x == target_position.x and global_position.y == target_position.y:
					print(current_id_path)
					current_id_path.pop_front()
		else:
			if chasing == true:
				chasing = false
				teleport = false
				current_id_path.clear()
				make_backtrack_path(own_position)
				global_position = global_position.move_toward(target_position, speed)
				if global_position.x == target_position.x and global_position.y == target_position.y:
					current_id_path.pop_front()
			else:
				global_position = global_position.move_toward(target_position, speed)
				if global_position.x == target_position.x and global_position.y == target_position.y:
					current_id_path.pop_front()

	
#Backtraking zone
func make_backtrack_path(own_position):
	# Resuelve el laberinto desde la posici√≥n inicial
	current_id_path = Backtrack_path.get_backtrack_path(own_position, spawn_position)



func _on_hitbox_area_entered(area):
	if area.name == \"Swordbox\":
		currentHealth -= 1
		if currentHealth == 0:
			queue_free()
"

[sub_resource type="CircleShape2D" id="CircleShape2D_kkro7"]
radius = 23.79

[sub_resource type="CircleShape2D" id="CircleShape2D_shsp5"]
radius = 7.56637

[node name="Blue_Spectre" type="CharacterBody2D"]
script = SubResource("GDScript_pup0s")

[node name="Sprite2D" type="Sprite2D" parent="."]
texture = ExtResource("2_hagas")
offset = Vector2(-1, 2)
hframes = 8
vframes = 4
frame = 2

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
position = Vector2(4.30271e-07, -2.23517e-08)
scale = Vector2(0.225781, 0.223261)
shape = SubResource("CircleShape2D_kkro7")

[node name="Timer" type="Timer" parent="."]
wait_time = 0.137
autostart = true

[node name="Astar" type="Node" parent="."]
script = ExtResource("3_cwgsw")

[node name="Backtraking_path" type="Node" parent="."]
script = ExtResource("4_g6oup")

[node name="hitbox" type="Area2D" parent="."]
collision_layer = 2
collision_mask = 19

[node name="CollisionShape2D" type="CollisionShape2D" parent="hitbox"]
scale = Vector2(0.8, 1)
shape = SubResource("CircleShape2D_shsp5")
debug_color = Color(1, 0, 0, 0.419608)

[connection signal="area_entered" from="hitbox" to="." method="_on_hitbox_area_entered"]
